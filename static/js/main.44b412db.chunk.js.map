{"version":3,"sources":["../../src/index.tsx","App.js","index.js"],"names":["forwardRef","className","style","state","defaultState","onPause","onPlay","onToggle","buttonRef","useRef","useState","setState","toggle","useCallback","s","useEffect","useLayoutEffect","ref","el","onClick","styles","height","version","viewBox","width","id","d","App","borderRadius","background","margin","console","log","current","play","pause","ReactDOM","render","document","getElementById"],"mappings":"6SAuGeA,sBA3EU,SAAC,EAAD,G,IAErBC,cACAC,U,IACAC,MAAOC,WAAeA,EAAA,WACtBC,YACAC,WACAC,aAIIC,EAAYC,iBAAlB,M,EAC0BC,mBAASN,GAA5BD,OAAOQ,OAERC,EAASC,uBAAY,WACzBF,GAAS,kBAAQG,uBAAR,cADX,IA0CA,OAtCAC,qBAAU,WACRJ,OACC,CAFHI,IAIAA,qBAAU,WACR,GACER,KAEF,WAAIJ,EACF,GACEE,IAGF,GACEC,MAGH,CAbHS,IAeAC,2BAAgB,WACd,GAAKC,GAAQT,EAAb,SAIA,IAAMU,EAAiCV,EAAvC,QAEAU,WAAc,4BAAMf,GACpBe,OAAU,kBAAMP,EAAN,YACVO,QAAW,kBAAMP,EAAN,WACXO,SAAY,kBAAMN,KAElB,oBAAWK,EACTA,KAEEA,eAEH,CAACA,EAAKd,EAjBTa,IAoBE,yBACEC,IAAKT,EACLW,QAASP,EACTX,UAAW,CAACmB,EAAD,OAAgBA,EAAhB,gBACXlB,MAAOA,GAEP,yBAAKmB,OAAO,OAAOC,QAAQ,MAAMC,QAAQ,YAAYC,MAAM,QACzD,yBAAKvB,UAAU,mBACf,0BACEwB,GAAG,aACHxB,UAAU,eACVyB,EAAE,yEC/DGC,G,KA5BH,WAEV,IAAMnB,EAAYC,iBAAO,MAEzB,OAAO,oCACL,kBAAC,EAAD,CACEQ,IAAKT,EACLN,MAAO,CACLsB,MAAO,QACPH,OAAQ,QACRO,aAAc,OACdC,WAAY,UACZC,OAAQ,eAEV3B,MAAM,UACNG,OAAQ,kBAAMyB,QAAQC,IAAI,WAC1B3B,QAAS,kBAAM0B,QAAQC,IAAI,YAC3BzB,SAAU,kBAAMwB,QAAQC,IAAI,eAG9B,6BACE,4BAAQb,QAAS,kBAAMX,EAAUyB,QAAQC,SAAzC,QACA,4BAAQf,QAAS,kBAAMX,EAAUyB,QAAQE,UAAzC,SACA,4BAAQhB,QAAS,kBAAMX,EAAUyB,QAAQrB,WAAzC,cCtBNwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.44b412db.chunk.js","sourcesContent":["import React, {\n  forwardRef,\n  useLayoutEffect,\n  useRef,\n  useEffect,\n  useState,\n  useCallback,\n  Ref,\n  CSSProperties\n} from 'react'\nimport styles from './styles.module.css'\n\nexport interface Props {\n  state?: 'playing' | 'paused'\n  onPlay?: () => void\n  onPause?: () => void\n  onToggle?: (state: string) => void\n  className?: string\n  style?: CSSProperties\n}\n\nexport interface YSPlayPauseButton extends HTMLDivElement {\n  play: () => void\n  pause: () => void\n  toggle: () => void\n  isPaused: () => boolean\n}\n\nconst ExampleComponent = (\n  {\n    className,\n    style,\n    state: defaultState = 'paused',\n    onPause,\n    onPlay,\n    onToggle\n  }: Props,\n  ref: Ref<YSPlayPauseButton>\n) => {\n  const buttonRef = useRef<HTMLDivElement>(null)\n  const [state, setState] = useState(defaultState)\n\n  const toggle = useCallback(() => {\n    setState((s) => (s === 'paused' ? 'playing' : 'paused'))\n  }, [])\n\n  useEffect(() => {\n    setState(defaultState)\n  }, [defaultState])\n\n  useEffect(() => {\n    if (onToggle) {\n      onToggle(state)\n    }\n    if (state === 'paused') {\n      if (onPause) {\n        onPause()\n      }\n    } else {\n      if (onPlay) {\n        onPlay()\n      }\n    }\n  }, [state])\n\n  useLayoutEffect(() => {\n    if (!ref || !buttonRef.current) {\n      return\n    }\n\n    const el: Partial<YSPlayPauseButton> = buttonRef.current\n\n    el.isPaused = () => state === 'paused'\n    el.play = () => setState('playing')\n    el.pause = () => setState('paused')\n    el.toggle = () => toggle()\n\n    if (typeof ref === 'function') {\n      ref(el as YSPlayPauseButton)\n    } else {\n      ;(ref as any).current = el as YSPlayPauseButton\n    }\n  }, [ref, state, toggle])\n\n  return (\n    <div\n      ref={buttonRef}\n      onClick={toggle}\n      className={[styles.button, styles[state], className].join(' ')}\n      style={style}\n    >\n      <svg height='100%' version='1.1' viewBox='0 0 36 36' width='100%'>\n        <use className='ytp-svg-shadow' />\n        <path\n          id='ytp-id-110'\n          className='ytp-svg-fill'\n          d='M 12,26 18.5,22 18.5,14 12,10 z M 18.5,22 25,18 25,18 18.5,14 z'\n        />\n      </svg>\n    </div>\n  )\n}\n\nexport default forwardRef(ExampleComponent)\n","import React, { useRef } from 'react'\n\nimport PlayButton from '@iyaroslav/play-pause-button'\nimport '@iyaroslav/play-pause-button/dist/index.css'\n\nconst App = () => {\n  /** @type {{ current: YSPlayPauseButton }} */\n  const buttonRef = useRef(null)\n\n  return <>\n    <PlayButton\n      ref={buttonRef}\n      style={{\n        width: '30rem',\n        height: '20rem',\n        borderRadius: '5rem',\n        background: '#e62117',\n        margin: '1.6rem auto'\n      }}\n      state='playing'\n      onPlay={() => console.log('2 Play')}\n      onPause={() => console.log('2 Pause')}\n      onToggle={() => console.log('2 Toggle')}\n    />\n\n    <div>\n      <button onClick={() => buttonRef.current.play()}>Play</button>\n      <button onClick={() => buttonRef.current.pause()}>Pause</button>\n      <button onClick={() => buttonRef.current.toggle()}>Toggle</button>\n    </div>\n  </>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}