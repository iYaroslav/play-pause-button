{"version":3,"sources":["../../src/index.tsx","App.js","index.js"],"names":["forwardRef","state","defaultState","onToggle","buttonRef","useRef","useState","toggle","useCallback","setState","s","useEffect","onPause","onPlay","useLayoutEffect","ref","el","onClick","className","styles","style","height","version","viewBox","width","d","App","borderRadius","background","margin","opacity","console","log","current","play","pause","ReactDOM","render","document","getElementById"],"mappings":"oWAkGeA,sBAtEU,SAAC,EAAD,OACvB,EADuB,EACvB,YADuB,EACvB,MADuB,IAIrBC,MAAOC,OAJc,MACvB,SADuB,EACvB,EADuB,EACvB,UADuB,EACvB,OAMEC,EAPqB,EAOrBA,SAIIC,EAAYC,iBAAlB,MAXuB,EAYGC,mBAA1B,GAZuB,mBAYjB,EAZiB,KAYjB,EAZiB,KAcjBC,EAASC,uBAAY,WACzBC,GAAUC,YAAD,MAAQA,uBAAjBD,cADF,IA0CA,OAtCAE,qBAAU,WACRF,OACC,CAFHE,IAIAA,qBAAU,WACR,GACER,KAEF,WAAIF,EACF,GACEW,IAGF,GACEC,MAGH,CAbHF,IAeAG,2BAAgB,WACd,GAAKC,GAAQX,EAAb,SAIA,IAAMY,EAAiCZ,EAAvC,QAEAY,WAAc,iBAAdA,WAAoBf,GACpBe,OAAU,kBAAMP,EAAhBO,YACAA,QAAW,kBAAMP,EAAjBO,WACAA,SAAY,kBAAMT,KAElB,oBAAWQ,EACTA,KAEEA,eAEH,CAACA,EAAKd,EAjBTa,IAoBE,yBACEC,IAAKX,EACLa,QAASV,EACTW,UAAW,CAACC,EAAD,OAAgBA,EAAhB,gBACXC,MAAOA,GAEP,yBAAKC,OAAO,OAAOC,QAAQ,MAAMC,QAAQ,YAAYC,MAAM,QACzD,0BAAMC,EAAE,yEC1DDC,G,MA7BH,WAEV,IAAMtB,EAAYC,iBAAO,MAEzB,OAAO,oCACL,kBAAC,EAAD,CACEU,IAAKX,EACLgB,MAAO,CACLI,MAAO,QACPH,OAAQ,QACRM,aAAc,OACdC,WAAY,UACZC,OAAQ,cACRC,QAAS,GAEX7B,MAAM,UACNY,OAAQ,kBAAMkB,QAAQC,IAAI,WAC1BpB,QAAS,kBAAMmB,QAAQC,IAAI,YAC3B7B,SAAU,kBAAM4B,QAAQC,IAAI,eAG9B,6BACE,4BAAQf,QAAS,kBAAMb,EAAU6B,QAAQC,SAAzC,QACA,4BAAQjB,QAAS,kBAAMb,EAAU6B,QAAQE,UAAzC,SACA,4BAAQlB,QAAS,kBAAMb,EAAU6B,QAAQ1B,WAAzC,cCvBN6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.63274eb7.chunk.js","sourcesContent":["import React, {\n  forwardRef,\n  useLayoutEffect,\n  useRef,\n  useEffect,\n  useState,\n  useCallback,\n  Ref,\n  CSSProperties\n} from 'react'\nimport styles from './styles.module.css'\n\nexport interface Props {\n  state?: 'playing' | 'paused'\n  onPlay?: () => void\n  onPause?: () => void\n  onToggle?: (state: string) => void\n  className?: string\n  style?: CSSProperties\n}\n\nexport interface YSPlayPauseButton extends HTMLDivElement {\n  play: () => void\n  pause: () => void\n  toggle: () => void\n  isPaused: () => boolean\n}\n\nconst ExampleComponent = (\n  {\n    className,\n    style,\n    state: defaultState = 'paused',\n    onPause,\n    onPlay,\n    onToggle\n  }: Props,\n  ref: Ref<YSPlayPauseButton>\n) => {\n  const buttonRef = useRef<HTMLDivElement>(null)\n  const [state, setState] = useState(defaultState)\n\n  const toggle = useCallback(() => {\n    setState((s) => (s === 'paused' ? 'playing' : 'paused'))\n  }, [])\n\n  useEffect(() => {\n    setState(defaultState)\n  }, [defaultState])\n\n  useEffect(() => {\n    if (onToggle) {\n      onToggle(state)\n    }\n    if (state === 'paused') {\n      if (onPause) {\n        onPause()\n      }\n    } else {\n      if (onPlay) {\n        onPlay()\n      }\n    }\n  }, [state])\n\n  useLayoutEffect(() => {\n    if (!ref || !buttonRef.current) {\n      return\n    }\n\n    const el: Partial<YSPlayPauseButton> = buttonRef.current\n\n    el.isPaused = () => state === 'paused'\n    el.play = () => setState('playing')\n    el.pause = () => setState('paused')\n    el.toggle = () => toggle()\n\n    if (typeof ref === 'function') {\n      ref(el as YSPlayPauseButton)\n    } else {\n      ;(ref as any).current = el as YSPlayPauseButton\n    }\n  }, [ref, state, toggle])\n\n  return (\n    <div\n      ref={buttonRef}\n      onClick={toggle}\n      className={[styles.button, styles[state], className].join(' ')}\n      style={style}\n    >\n      <svg height='100%' version='1.1' viewBox='0 0 36 36' width='100%'>\n        <path d='M 12,26 18.5,22 18.5,14 12,10 z M 18.5,22 25,18 25,18 18.5,14 z' />\n      </svg>\n    </div>\n  )\n}\n\nexport default forwardRef(ExampleComponent)\n","import React, { useRef } from 'react'\n\nimport PlayButton from '@iyaroslav/play-pause-button'\nimport '@iyaroslav/play-pause-button/dist/index.css'\n\nconst App = () => {\n  /** @type {{ current: YSPlayPauseButton }} */\n  const buttonRef = useRef(null)\n\n  return <>\n    <PlayButton\n      ref={buttonRef}\n      style={{\n        width: '30rem',\n        height: '20rem',\n        borderRadius: '5rem',\n        background: '#e62117',\n        margin: '1.6rem auto',\n        opacity: 1\n      }}\n      state='playing'\n      onPlay={() => console.log('2 Play')}\n      onPause={() => console.log('2 Pause')}\n      onToggle={() => console.log('2 Toggle')}\n    />\n\n    <div>\n      <button onClick={() => buttonRef.current.play()}>Play</button>\n      <button onClick={() => buttonRef.current.pause()}>Pause</button>\n      <button onClick={() => buttonRef.current.toggle()}>Toggle</button>\n    </div>\n  </>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}